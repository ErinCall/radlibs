{%extends 'layout.html.jinja'%}
{% set active_page = 'language' %}
{%block content%}
    <div class="row-fluid marketing">
        <div class="span12">
            <h4 id="language">The Language</h4>
            <p>If you're familiar with the idea of Madlibs<sup>&reg;</sup>, you're already familiar with the basics of Radlibs. A Radlib includes any amount of text and any number of references to <em>Libs</em>. A Lib contains one or more phrases or phrase templates, referred to as <em>Rads</em>. When a Radlib is <em>expanded</em>, a random Rad is chosen from each referenced Lib.</p>
            <p>Thus, if you have a Lib called "Verb", containing a few verbs:</p>
            <pre class="listing">
sing
run
fart
wash</pre>
            <p>and a Lib called "Adverb", containing a few of those:</p>
            <pre class="listing">
wetly
exuberantly
joyfully
slowly</pre>
            <p>Then you can write a short Radlib that uses them:</p>
            <pre class="listing">I love to &lt;Verb&gt; &lt;Adjective&gt;!</pre>
            <p>The Radlibs engine will select a random Verb and a random Adjective from the supplied lists and generate a sentence with it:</p>
            <pre class="listing">I love to run exuberantly!</pre>
        </div>
    </div>
    <div class="row-fluid marketing">
        <div class="span12">
            <h4 id="recursion">Recursion</h4>
            <p>Libs' contents are themselves Radlibs. Thus, they can reference other Libs! This is where things really start to get rad. Suppose you have a Lib called "Loot":</p>
            <pre class="listing">
+5 Sword
Gold piece
Heavy Truncheon
bolt</pre>
            <p>Then you could define a Lib called "Treasure":</p>
            <pre class="listing">
you find 1 &lt;Loot&gt;.
you find 5 &lt;Loot&gt;s.
bonanza! You find over 9000 &lt;Loot&gt;s!</pre>
            <p>Now you can go treasure-hunting:</p>
            <pre class="listing">
Upon opening the chest, &lt;Treasure&gt;</pre>
            <p>You'll find something or other&hellip;</p>
            <pre class="listing">
Upon opening the chest, you find 5 bolts.</pre>
        </div>
    </div>
    <div class="row-fluid marketing">
        <div class="span12">
            <h4 id="syntax">Syntax</h4>
            <p>There isn't a lot of syntax to learn in order to use Radlibs. Libs are referenced by putting their name in &lt;angle brackets&gt;. Lib names must be a single capital letter, followed by only lowercase letters and underscores.</p>
            <p>A lib may have one or several <em>modifiers</em>. A modifier is a nonalphanumeric character appearing  between the opening angle-bracket and the first letter of the Lib name. It will apply certain modifications to the expanded text of the Lib. The modifiers recognized by Radlibs are:</p>
            <ul>
                <li><code>!</code>: Change all the text in the expanded lib to uppercase.</li>
                <li><code>/</code>: Change all the text in the expanded lib to lowercase.</li>
                <li><code>&amp;</code>: Change the first letter of the expanded lib to uppercase.</li>
                <li><code>.</code>: Change the first letter of the expanded lib to lowercase.</li>
            </ul>
            <p>If you expect a Lib's expansion to generate a verb or verb phrase, and you want it to come out in the past tense, you can indicate this by putting a <code>d</code> after the lib: <code>&lt;Verb&gt;d</code>.</p>
            <p>If your Rad is a verb phrase, you can indicate which of the words in it is the verb by putting a caret (<code>^</code>) after it: <code>quickly run^ to the store</code>. The caret is not necessary if the verb is the last word in your Rad.</p>
            <p>In the same vein, if you expect a Lib's expansion to generate a noun or noun phrase, and you want it to be plural, put an <code>s</code> after the lib: <code>&lt;Crate&gt;s</code>. Indicate which word in a phrase is the primary noun with a <code>^</code>, just as when indicating the primary verb for tense-modification.</p>
            <p>You can put literal angle brackets, carets, etc. in your Radsnaps, by escaping them with a backslash: <code>\&lt; \&gt; \^</code>.</p>
            <p>You can be cavalier about the indefinite article ("a"/"an") preceding a Lib. If you want to use an indefinite article, as in <code>an &lt;Animal&gt;</code>, go ahead&mdash;Radlibs will automatically update the indefinite article, based on whether or not the next word starts with a vowel sound.</p>
        </div>
    </div>
    <div class="row-fluid marketing">
        <div class="span12">
            <h4>Live Demo</h4>
            <p>Radlibs provides a live demo of its capabilites. <a href="{{ url_for('live_demo') }}">Check it out!</a></p>
        </div>
    </div>
{%endblock content%}
